<?xml version="1.0" encoding="utf-8"?>
<Wix xmlns="http://wixtoolset.org/schemas/v4/wxs"
  xmlns:util="http://wixtoolset.org/schemas/v4/wxs/util"
  xmlns:ui="http://wixtoolset.org/schemas/v4/wxs/ui">
  <?include $(sys.CURRENTDIR)\Workdir\$(var.OutputBaseFilename)-$(var.ProductSku).Variables.wxi?>

  <Package Name="$(var.ProductNameWithVersion)" Language="$(var.ProductLanguage)"
    Version="$(var.ProductVersion)" Manufacturer="$(var.ProductManufacturer)"
    UpgradeCode="$(var.ProductUpgradeCode)" InstallerVersion="500" ProductCode="$(var.ProductId)">
    <SummaryInformation Description="$(var.PackageDescription)"
      Manufacturer="$(var.ProductManufacturer)" />
    <MajorUpgrade DowngradeErrorMessage="!(loc.DowngradeDenied)" />
    <Media Id="1" Cabinet="Data1.cab" EmbedCab="yes" CompressionLevel="high" />
    <Property Id="ARPHELPLINK" Value="!(loc.ProductHelpLink)" />
    <Property Id="ARPURLINFOABOUT" Value="!(loc.ProductUrlInfoAbout)" />
    <Property Id="ARPURLUPDATEINFO" Value="!(loc.ProductUrlUpdateInfo)" />
    <Property Id="ARPPRODUCTICON" Value="logo.ico" />
    <SetProperty Id="ARPINSTALLLOCATION" Value="[INSTALLDIR]" After="CostFinalize" />
    <Icon Id="logo.ico" SourceFile="{vendor_branding_logo}" />

    <!-- Required for Windows 7 and later. -->
    <Launch Condition="Installed OR VersionNT &gt;= 601" Message="!(loc.OSVersionRequired)" />
    <Launch
      Condition="(Not ITANIUM = &quot;Itanium&quot;) AND (Not ITANIUM = &quot;Itanium 2&quot;)"
      Message="!(loc.ProductIsNotSupportedOnItanium)" />

    <!--
      We may need to be able to install JDK in parallel. Therefore an in-place
      upgrade need to be disabled. Keep the code as reference in case we allow
      this in future or with JRE.
      <Upgrade Id="$(var.ProductUpgradeCode)">
        <UpgradeVersion OnlyDetect="yes" Minimum="$(var.ProductVersion)" Property="NEWPRODUCTFOUND"
    IncludeMinimum="no" />
        <UpgradeVersion Minimum="$(var.RTMProductVersion)" IncludeMinimum="yes"
    Maximum="$(var.ProductVersion)" Property="UPGRADEFOUND" IncludeMaximum="no"
    MigrateFeatures="yes" />
      </Upgrade>
      <CustomAction Id="PreventDowngrading" Error="!(loc.NewerVersionInstalled)" />

      <InstallExecuteSequence>
        <Custom Action="PreventDowngrading" After="FindRelatedProducts">NEWPRODUCTFOUND</Custom>
        <RemoveExistingProducts After="InstallFinalize" />
      </InstallExecuteSequence>
      <InstallUISequence>
        <Custom Action="PreventDowngrading" After="FindRelatedProducts">NEWPRODUCTFOUND</Custom>
      </InstallUISequence>
    -->

    <Property Id="WixAppFolder" Value="WixPerMachineFolder" />
    <WixVariable Id="WixUISupportPerUser" Value="1" />
    <WixVariable Id="WixUISupportPerMachine" Value="1" />

    <CustomAction Id="CustomSetDefaultPerUserFolder" Property="CustomWixPerUserFolder"
      Value="[LocalAppDataFolder]Programs\[ApplicationFolderName]" Execute="immediate" />
    <?if $(env.Platform)=x86?> 
      <CustomAction Id="CustomSetDefaultPerMachineFolder" Property="CustomWixPerMachineFolder"
        Value="[ProgramFilesFolder][ApplicationFolderName]" Execute="immediate" />
    <?else?>
      <CustomAction Id="CustomSetDefaultPerMachineFolder" Property="CustomWixPerMachineFolder"
        Value="[ProgramFiles64Folder][ApplicationFolderName]" Execute="immediate" />
    <?endif?>
    <CustomAction Id="CustomSetPerUserFolder" Property="APPLICATIONFOLDER"
      Value="[CustomWixPerUserFolder]" Execute="immediate" />
    <CustomAction Id="CustomSetPerMachineFolder" Property="APPLICATIONFOLDER"
      Value="[CustomWixPerMachineFolder]" Execute="immediate" />

    <InstallExecuteSequence>
      <Custom Action="CustomSetDefaultPerUserFolder" Before="CostFinalize" />
      <Custom Action="CustomSetDefaultPerMachineFolder" After="CustomSetDefaultPerUserFolder" />
      <Custom Action="CustomSetPerUserFolder" After="CustomSetDefaultPerMachineFolder"
        Condition='ACTION="INSTALL" AND (ALLUSERS="" OR ALLUSERS=0 OR (ALLUSERS=2 AND (NOT Privileged)))' />
      <Custom Action="CustomSetPerMachineFolder" After="CustomSetPerUserFolder"
        Condition='ACTION="INSTALL" AND (ALLUSERS=1 OR (ALLUSERS=2 AND Privileged))' />
    </InstallExecuteSequence>
    <InstallUISequence>
      <Custom Action="CustomSetDefaultPerUserFolder" Before="CostFinalize" />
      <Custom Action="CustomSetDefaultPerMachineFolder" After="CustomSetDefaultPerUserFolder" />
      <Custom Action="CustomSetPerUserFolder" After="CustomSetDefaultPerMachineFolder"
        Condition='ACTION="INSTALL" AND (ALLUSERS="" OR ALLUSERS=0 OR (ALLUSERS=2 AND (NOT Privileged)))' />
      <Custom Action="CustomSetPerMachineFolder" After="CustomSetPerUserFolder"
        Condition='ACTION="INSTALL" AND (ALLUSERS=1 OR (ALLUSERS=2 AND Privileged))' />
    </InstallUISequence>

    <!-- Add the shortcuts to your installer package -->
    <DirectoryRef Id="INSTALLDIR">
      <Component Id="CleanupMainInstallDir">
        <RegistryValue Root="HKMU"
          Key="SOFTWARE\$(var.ProductManufacturer)\$(var.ProductCategory)\$(var.ProductVersion)\$(var.JVM)\MSI"
          Name="Path" Type="string" Value="[INSTALLDIR]" KeyPath="yes" />
        <RegistryValue Root="HKMU"
          Key="SOFTWARE\$(var.ProductManufacturer)\$(var.ProductCategory)\$(var.ProductVersion)\$(var.JVM)\MSI"
          Name="Main" Type="integer" Value="1" />
        <!-- We need to use INSTALLDIR variable here or RemoveFolderEx will not remove on "install". -->
        <util:RemoveFolderEx On="uninstall" Property="INSTALLDIR" />
        <RemoveFolder Id="PRODUCTMANUFACTURER_REMOVE" Directory="PRODUCTMANUFACTURER" On="uninstall" />
      </Component>
      <Component Id="AddToEnvironmentPath">
        <RegistryValue Root="HKMU"
          Key="SOFTWARE\$(var.ProductManufacturer)\$(var.ProductCategory)\$(var.ProductVersion)\$(var.JVM)\MSI"
          Name="EnvironmentPath" Type="integer" Value="1" KeyPath="yes" />
      </Component>
      <Component Id="AddToEnvironmentPathSystem"
        Condition="ALLUSERS=1  OR (ALLUSERS=2 AND Privileged)">

        <RegistryValue Root="HKMU"
          Key="SOFTWARE\$(var.ProductManufacturer)\$(var.ProductCategory)\$(var.ProductVersion)\$(var.JVM)\MSI"
          Name="EnvironmentPathSetForSystem" Type="integer" Value="1" KeyPath="yes" /> <!-- Only to
        get a Keypath and can use Guid="*" for having different guid for each installer -->
        <Environment Id="PATH_SYSTEM" Name="PATH" Value="[INSTALLDIR]bin" Permanent="no"
          Part="first" Action="set" System="yes" />
      </Component>
      <Component Id="AddToEnvironmentPathUser"
        Condition="ALLUSERS=&quot;&quot; OR (ALLUSERS=2 AND (NOT Privileged))">

        <RegistryValue Root="HKMU"
          Key="SOFTWARE\$(var.ProductManufacturer)\$(var.ProductCategory)\$(var.ProductVersion)\$(var.JVM)\MSI"
          Name="EnvironmentPathSetForUser" Type="integer" Value="1" KeyPath="yes" /> <!-- Only to get
        a Keypath and can use Guid="*" for having different guid for each installer -->
        <Environment Id="PATH_USER" Name="PATH" Value="[INSTALLDIR]bin" Permanent="no" Part="first"
          Action="set" System="no" />
      </Component>
      <Component Id="SetJavaHomeVariable">
        <RegistryValue Root="HKMU"
          Key="SOFTWARE\$(var.ProductManufacturer)\$(var.ProductCategory)\$(var.ProductVersion)\$(var.JVM)\MSI"
          Name="JavaHome" Type="integer" Value="1" KeyPath="yes" />
      </Component>
      <Component Id="SetJavaHomeVariableSystem"
        Condition="ALLUSERS=1  OR (ALLUSERS=2 AND Privileged)">

        <RegistryValue Root="HKMU"
          Key="SOFTWARE\$(var.ProductManufacturer)\$(var.ProductCategory)\$(var.ProductVersion)\$(var.JVM)\MSI"
          Name="JavaHomeSetForSystem" Type="integer" Value="1" KeyPath="yes" /> <!-- Only to get a
        Keypath and can use Guid="*" for having different guid for each installer -->
        <Environment Id="JAVA_HOME_SYSTEM" Name="JAVA_HOME" Value="[INSTALLDIR]" Permanent="no"
          Action="set" System="yes" />
      </Component>
      <Component Id="SetJavaHomeVariableUser"
        Condition="ALLUSERS=&quot;&quot; OR (ALLUSERS=2 AND (NOT Privileged))">

        <RegistryValue Root="HKMU"
          Key="SOFTWARE\$(var.ProductManufacturer)\$(var.ProductCategory)\$(var.ProductVersion)\$(var.JVM)\MSI"
          Name="JavaHomeSetForUser" Type="integer" Value="1" KeyPath="yes" /> <!-- Only to get a
        Keypath and can use Guid="*" for having different guid for each installer -->
        <Environment Id="JAVA_HOME_USER" Name="JAVA_HOME" Value="[INSTALLDIR]" Permanent="no"
          Action="set" System="no" />
      </Component>

      <!-- Add jar launch by double click -->
      <Component Id="SetJarFileRunWith">
        <!--
        https://support.microsoft.com/en-us/help/256986/windows-registry-information-for-advanced-users
            If you write keys to a key under HKEY_CLASSES_ROOT, the system stores the information under
        HKEY_LOCAL_MACHINE\Software\Classes.
            If you write values to a key under HKEY_CLASSES_ROOT, and the key already exists under
        HKEY_CURRENT_USER\Software\Classes, the system will store the information there instead of
        under HKEY_LOCAL_MACHINE\Software\Classes.

        HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts\.jar\OpenWithProgids
        is automatically created by Windows when running jar file for the first time
        -->
        <RegistryValue Root="HKMU" Key="SOFTWARE\Classes\.jar" Type="string"
          Value="{vendor}.jarfile" KeyPath="yes" />
        <RegistryValue Root="HKMU" Key="SOFTWARE\Classes\.jar" Type="string" Name="Content Type"
          Value="application/java-archive" KeyPath="no" />

        <RegistryValue Root="HKMU" Key="SOFTWARE\Classes\{vendor}.jarfile\shell\open\command"
          Type="string" Value="&quot;[INSTALLDIR]bin\javaw.exe&quot; -jar &quot;%1&quot; %*"
          KeyPath="no" />
      </Component>
      <Component Id="SetOracleJavaSoftKeysCurrentVersion"
        Condition="NOT JAVASOFT_CURRENTVERSION OR JAVASOFT_CURRENTVERSION &lt;&gt; &quot;1.8&quot; AND JAVASOFT_CURRENTVERSION &lt; $(var.ProductMajorVersion)">

        <RegistryValue Root="HKLM" Key="SOFTWARE\JavaSoft\$(var.OracleJavasoftBaseKey)"
          Name="CurrentVersion" Type="string" Value="$(var.OracleVersionKey)" KeyPath="yes" />
      </Component>
      <Component Id="SetOracleJavaSoftKeys">
        <RegistryValue Root="HKLM"
          Key="SOFTWARE\JavaSoft\$(var.OracleJavasoftBaseKey)\$(var.OracleVersionKey)"
          Name="JavaHome" Type="string" Value="[INSTALLDIR]" KeyPath="yes" />
        <?if $(env.PRODUCT_CATEGORY)="jre"?>
          <RegistryValue Root="HKLM"
            Key="SOFTWARE\JavaSoft\$(var.OracleJavasoftBaseKey)\$(var.OracleVersionKey)"
            Name="RuntimeLib" Type="string" Value="[INSTALLDIR]$(var.DllPath)" KeyPath="no" />
          <!-- Oracle doesn't set RuntimeLib for JDK .. because JRE is "private" JRE so no ?else? -->
        <?endif?>
        <RegistryValue Root="HKLM"
          Key="SOFTWARE\JavaSoft\$(var.OracleJavasoftBaseKey)\$(var.ProductVersion)" Name="JavaHome"
          Type="string" Value="[INSTALLDIR]" KeyPath="no" />
        <?if $(env.PRODUCT_CATEGORY)="jre"?>
          <RegistryValue Root="HKLM"
            Key="SOFTWARE\JavaSoft\$(var.OracleJavasoftBaseKey)\$(var.ProductVersion)"
            Name="RuntimeLib" Type="string" Value="[INSTALLDIR]$(var.DllPath)" KeyPath="no" />
          <!-- Oracle don't set RuntimeLib for JDK .. because JRE is "private" JRE so no ?else? -->
        <?endif?>
      </Component>
      <!-- Add jnlp launch by double click -->
      <?if $(env.Platform)=x64?>
        <?if $(env.PRODUCT_MAJOR_VERSION)=8?>
          <?if $(env.BUNDLE_ICEDTEAWEB)=true?>
            <Component Id="SetJNLPFileRunWith">
              <!--
                    https://support.microsoft.com/en-us/help/256986/windows-registry-information-for-advanced-users
                        If you write keys to a key under HKEY_CLASSES_ROOT, the system stores the information under
              HKEY_LOCAL_MACHINE\Software\Classes.
                        If you write values to a key under HKEY_CLASSES_ROOT, and the key already exists under
              HKEY_CURRENT_USER\Software\Classes, the system will store the information there instead of
              under HKEY_LOCAL_MACHINE\Software\Classes.

                    HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts\.jnlp\OpenWithProgids
                    is automatically created by Windows when running jnlp file for the first time
                    -->
              <RegistryValue Root="HKMU" Key="SOFTWARE\Classes\.jnlp" Type="string"
                Value="{vendor}.jnlpfile" KeyPath="yes" />
              <RegistryValue Root="HKMU" Key="SOFTWARE\Classes\.jnlp" Type="string" Name="Content Type"
                Value="application/jnlp" KeyPath="no" />

              <RegistryValue Root="HKMU" Key="SOFTWARE\Classes\{vendor}.jnlpfile\shell\open\command"
                Type="string" Value="&quot;[INSTALLDIR]bin\javaws.exe&quot; -jnlp &quot;%1&quot; %*"
                KeyPath="no" />
              <RegistryValue Root="HKLM"
                Key="SOFTWARE\Classes\MIME\Database\Content Type\application/x-java-jnlp-file"
                Type="string" Name="Extension" Value=".jnlp" KeyPath="no" />
            </Component>
          <?endif?>
        <?endif?>
      <?endif?>
    </DirectoryRef>

    <Property Id="JAVASOFT_CURRENTVERSION">
      <RegistrySearch Id="JAVASOFT_CURRENTVERSION" Root="HKLM"
        Key="SOFTWARE\JavaSoft\$(var.OracleJavasoftBaseKey)" Name="CurrentVersion" Type="raw" />
    </Property>

    <!-- List of features to install -->
    <Feature Id="FeatureMain" ConfigurableDirectory="INSTALLDIR" Level="1"
      Title="$(var.FeatureMainName)" Description="$(var.FeatureMainDescription)" Display="expand"
      AllowAdvertise="no" InstallDefault="local" AllowAbsent="no">
      <ComponentRef Id="CleanupMainInstallDir" />
      <ComponentGroupRef Id="AppFiles" />
      <Feature Id="FeatureEnvironment" Level="1" Title="!(loc.FeatureEnvironmentTitle)"
        Description="!(loc.FeatureEnvironmentDescription)" AllowAdvertise="no"
        InstallDefault="followParent">
        <ComponentRef Id="AddToEnvironmentPath" />
        <ComponentRef Id="AddToEnvironmentPathSystem" />
        <ComponentRef Id="AddToEnvironmentPathUser" />
      </Feature>
      <Feature Id="FeatureJarFileRunWith" Level="1" Title="!(loc.FeatureJarFileRunWithTitle)"
        Description="!(loc.FeatureJarFileRunWithDescription)" AllowAdvertise="no"
        InstallDefault="followParent">
        <ComponentRef Id="SetJarFileRunWith" />
      </Feature>
      <Feature Id="FeatureJavaHome" Level="2" Title="!(loc.FeatureJavaHomeTitle)"
        Description="!(loc.FeatureJavaHomeDescription)" AllowAdvertise="no"
        InstallDefault="followParent">
        <ComponentRef Id="SetJavaHomeVariable" />
        <ComponentRef Id="SetJavaHomeVariableSystem" />
        <ComponentRef Id="SetJavaHomeVariableUser" />
      </Feature>

      <Feature Id="FeatureOracleJavaSoft" Level="2" Title="!(loc.FeatureOracleJavaSoftName)"
        Description="!(loc.FeatureOracleJavaSoftDescription)" AllowAdvertise="no"
        InstallDefault="followParent">
        <!-- See
        https://docs.oracle.com/javase/9/install/installation-jdk-and-jre-microsoft-windows-platforms.htm#JSJIG-GUID-47C269A3-5220-412F-9E31-4B8C37A82BFB -->
        <!-- As Oracle, don't override if current value is already bigger ( newer java ): "a value
        that is the highest installed version on the system" 
        Note !! : the reg key is not removed during uninstall if any other installer reference it
        -->
        <ComponentRef Id="SetOracleJavaSoftKeysCurrentVersion" />
        <ComponentRef Id="SetOracleJavaSoftKeys" />
      </Feature>
      <?if $(env.Platform)=x64?>
        <?if $(env.PRODUCT_MAJOR_VERSION)=8?>
          <?if $(env.BUNDLE_ICEDTEAWEB)=true?>
          <Feature Id="FeatureIcedTeaWeb" ConfigurableDirectory="INSTALLDIR" Level="2"
            Title="!(loc.FeatureIcedTeaWebTitle)" Description="!(loc.FeatureIcedTeaWebDescription)"
            AllowAdvertise="no" InstallDefault="local">
            <ComponentGroupRef Id="IcedTeaWebFiles" />
            <Feature Id="FeatureJNLPFileRunWith" Level="3" Title="!(loc.FeatureJNLPFileRunWithTitle)"
              Description="!(loc.FeatureJNLPFileRunWithDescription)" AllowAdvertise="no"
              InstallDefault="followParent">
              <ComponentRef Id="SetJNLPFileRunWith" />
            </Feature>
          </Feature>
          <?endif?>
        <?endif?>
      <?endif?>
    </Feature>
    <!-- <Feature Id="FeatureSource" ConfigurableDirectory="INSTALLDIR" Level="1"
    Title="!(loc.FeatureSourceTitle)" Description="!(loc.FeatureSourceDescription)" Absent="allow"
    AllowAdvertise="no" InstallDefault="local">
      <ComponentGroupRef Id="SrcFiles" />
    </Feature> -->

    <WixVariable Id="WixUILicenseRtf" Value="$(var.SetupResourcesDir)\$(var.license)" />
    <WixVariable Id="WixUIDialogBmp" Value="{vendor_branding_dialog}" />
    <WixVariable Id="WixUIBannerBmp" Value="{vendor_branding_banner}" />

    <UI>
      <ui:WixUI Id="WixUI_FeatureTree" />
      <?if $(var.license_shown)=0 ?> <!-- Optional license not shown -->
        <Publish Dialog="WelcomeDlg" Control="Next" Event="NewDialog" Value="CustomInstallScopeDlg"
          Order="3" />
        <Publish Dialog="CustomInstallScopeDlg" Control="Back" Event="NewDialog"
          Value="WelcomeDlg" />
      <?else?> <!-- License shown -->
        <Publish Dialog="WelcomeDlg" Control="Next" Event="NewDialog" Value="LicenseAgreementDlg"
          Order="3" />
        <Publish Dialog="LicenseAgreementDlg" Control="Next" Event="NewDialog"
          Value="CustomInstallScopeDlg" Order="3" />
        <Publish Dialog="CustomInstallScopeDlg" Control="Back" Event="NewDialog"
          Value="LicenseAgreementDlg" />
      <?endif?>

      <Publish Dialog="CustomInstallScopeDlg" Control="Next" Event="DoAction"
        Value="CustomSetPerMachineFolder" Condition='WixAppFolder="WixPerMachineFolder"' Order="1" />
      <Publish Dialog="CustomInstallScopeDlg" Control="Next" Event="DoAction"
        Value="CustomSetPerUserFolder" Condition='WixAppFolder="WixPerUserFolder"' Order="2" />
      <Publish Dialog="CustomInstallScopeDlg" Control="Next" Property="ALLUSERS" Value="{}"
        Order="2" Condition='WixAppFolder = "WixPerUserFolder"' />
      <Publish Dialog="CustomInstallScopeDlg" Control="Next" Property="ALLUSERS" Value="1" Order="3"
        Condition='WixAppFolder = "WixPerMachineFolder"' />
      <Publish Dialog="CustomInstallScopeDlg" Control="Next" Property="MSIINSTALLPERUSER" Value="1"
        Order="2" Condition='WixAppFolder = "WixPerUserFolder"' />
      <Publish Dialog="CustomInstallScopeDlg" Control="Next" Property="MSIINSTALLPERUSER" Value="{}"
        Order="3" Condition='WixAppFolder = "WixPerMachineFolder"' />
      <Publish Dialog="CustomInstallScopeDlg" Control="Next" Event="NewDialog" Value="CustomizeDlg"
        Order="3" />

      <Publish Dialog="CustomizeDlg" Control="Back" Event="NewDialog" Value="CustomInstallScopeDlg"
        Order="3" />

      <!-- Custom UI Banner to select perMachine or perUser install -->
      <Dialog Id="CustomInstallScopeDlg" Width="370" Height="270" KeepModeless="yes"
        Title="[ProductName] Setup">
        <Control Id="BannerBitmap" Type="Bitmap" X="0" Y="0" Width="370" Height="44" TabSkip="no"
          Text="!(loc.InstallScopeDlgBannerBitmap)" />
        <Control Id="BannerLine" Type="Line" X="0" Y="44" Width="370" Height="0" />
        <Control Id="BottomLine" Type="Line" X="0" Y="234" Width="370" Height="0" />
        <Control Id="Description" Type="Text" X="25" Y="23" Width="280" Height="20"
          Transparent="yes" NoPrefix="yes" Text="!(loc.CustomScopeDlgDescription)" />
        <Control Id="Title" Type="Text" X="15" Y="6" Width="200" Height="15" Transparent="yes"
          NoPrefix="yes" Text="!(loc.CustomScopeDlgTitle)" />
        <Control Id="BothScopes" Type="RadioButtonGroup" X="20" Y="55" Width="330" Height="40"
          Property="WixAppFolder">
          <RadioButtonGroup Property="WixAppFolder">
            <RadioButton Value="WixPerUserFolder" X="0" Y="0" Width="300" Height="17"
              Text="!(loc.CustomScopeDlgPerUser)" />
            <RadioButton Value="WixPerMachineFolder" X="0" Y="20" Width="300" Height="17"
              Text="!(loc.CustomScopeDlgPerMachine)" />
          </RadioButtonGroup>
        </Control>
        <Control Id="Back" Type="PushButton" X="180" Y="243" Width="56" Height="17"
          Text="!(loc.WixUIBack)" />
        <Control Id="Next" Type="PushButton" X="236" Y="243" Width="56" Height="17" Default="yes"
          Text="!(loc.WixUINext)" />
        <Control Id="Cancel" Type="PushButton" X="304" Y="243" Width="56" Height="17" Cancel="yes"
          Text="!(loc.WixUICancel)">
          <Publish Event="SpawnDialog" Value="CancelDlg" />
        </Control>
      </Dialog>

    </UI>
    <!-- Define the directory structure -->
    <?if $(env.Platform)=x86?>
      <StandardDirectory Id="ProgramFilesFolder">
        <Directory Id="PRODUCTMANUFACTURER" Name="$(var.ProductManufacturer)">
          <Directory Id="INSTALLDIR" Name="$(var.AppFolder)" />
        </Directory>
      </StandardDirectory>
    <?elseif $(env.Platform)=x64?>
      <StandardDirectory Id="ProgramFiles64Folder">
        <Directory Id="PRODUCTMANUFACTURER" Name="$(var.ProductManufacturer)">
          <Directory Id="INSTALLDIR" Name="$(var.AppFolder)" />
        </Directory>
      </StandardDirectory>
    <?elseif $(env.Platform)=arm64?>
      <Directory Id="ProgramFiles64Folder"> <!-- ARM64 is 64bit -->
        <Directory Id="PRODUCTMANUFACTURER" Name="$(var.ProductManufacturer)">
          <Directory Id="INSTALLDIR" Name="$(var.AppFolder)" />
        </Directory>
      </Directory>
    <?else?>
      <!-- unknown arch > build must be failed without directory-->
    <?endif?>
  </Package>
</Wix>